import Head from "next/head";
import Link from "next/link";
import { getNotices } from "@/lib/notices";
import { NoticeResponse, NoticeWrapper } from "@/type";
import { useEffect, useState } from "react";
import PostCard from "@/components/ui/PostCard";
import Title from "@/components/ui/Title";
import Button from "@/components/ui/Button";
import styles from "@/styles/index.module.css";
import { Icon } from "@/components/icon/Icon";
import Pagination from "@/components/ui/Pagination";

export default function Home() {
  const [postFitData, setPostFitData] = useState<NoticeWrapper[]>([]);
  const [postAllData, setPostAllData] = useState<NoticeWrapper[]>([]);
  const [sortOpen, setSortOpen] = useState(false);
  const [sortState, setSortState] = useState("마감임박순");
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 6;
  const [totalItems, setTotalItems] = useState(0);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const [fitData, allData]: [NoticeResponse, NoticeResponse] = await Promise.all([
          getNotices({ limit: 3 }),
          getNotices({
            offset: (currentPage - 1) * itemsPerPage,
            limit: itemsPerPage,
            sort:
              sortState === "마감임박순"
                ? "time"
                : sortState === "시급많은순"
                ? "pay"
                : sortState === "시간적은순"
                ? "hour"
                : "shop",
          }),
        ]);

        setPostFitData(fitData.items || []);
        setPostAllData(allData.items || []);
        setTotalItems(allData.count || 0);
      } catch (error) {
        console.error("API 요청 중 오류 발생:", error);
      }
    };
    fetchData();
  }, [currentPage, sortState]);

  const sortToggle = () => {
    sortOpen ? setSortOpen(false) : setSortOpen(true);
  };

  const sortSet = (state: string) => {
    setSortState(state);
    setSortOpen(false);
  };

  return (
    <>
      <Head>
        <title>더 줄게 - 일자리 매칭 플랫폼</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <meta property="og:image" content="/thumbnail.jpg" />
        <meta property="og:title" content="더 줄게 - 일자리 매칭 플랫폼" />
      </Head>
      <div>
        <main className={styles.main}>
          <section className={styles.main_fit}>
            <Title text="맞춤 공고" />
            <ul className="post_list">
              {postFitData.map(({ item }) => {
                if (!item) return null;
                return (
                  <li key={item.id}>
                    <PostCard data={item} />
                  </li>
                );
              })}
            </ul>
          </section>
          <section className={styles.main_all}>
            <Title text="전체 공고">
              <div className={styles.right}>
                <div className={styles.sort_box}>
                  <p onClick={sortToggle}>
                    {sortState} <Icon name="selectUp" size={10}></Icon>
                  </p>
                  {sortOpen && (
                    <ul>
                      <li
                        onClick={() => {
                          sortSet("마감임박순");
                        }}
                      >
                        마감임박순
                      </li>
                      <li
                        onClick={() => {
                          sortSet("시급많은순");
                        }}
                      >
                        시급많은순
                      </li>
                      <li
                        onClick={() => {
                          sortSet("시간적은순");
                        }}
                      >
                        시간적은순
                      </li>
                      <li
                        onClick={() => {
                          sortSet("가나다순");
                        }}
                      >
                        가나다순
                      </li>
                    </ul>
                  )}
                </div>
                <div className={styles.filter}>
                  <Button buttonText="상세 필터" styleButton="primary" size="small" />
                </div>
              </div>
            </Title>
            <ul className="post_list">
              {postAllData.map(({ item }) => {
                if (!item) return null;
                return (
                  <li key={item.id}>
                    <PostCard data={item} />
                  </li>
                );
              })}
            </ul>
            <div className={styles.page}>
              <Pagination
                currentPage={currentPage}
                totalPosts={totalItems}
                postsPerPage={itemsPerPage}
                setCurrentPage={setCurrentPage}
              />
            </div>
          </section>
        </main>
      </div>
    </>
  );
}
