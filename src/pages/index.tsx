import { useAuthUser } from "@/stores/useAuthUser";
import Head from "next/head";
import { getNotices } from "@/lib/notices";
import { NoticeResponse, NoticeWrapper, NoticeRequestParams } from "@/type";
import { useEffect, useState } from "react";
import PostCard from "@/components/ui/PostCard";
import Title from "@/components/ui/Title";
import styles from "@/styles/index.module.css";
import DataList from "@/components/ui/DataList";
import EmptyState from "@/components/ui/EmptyState";

export default function Home() {
  const { token, user } = useAuthUser();
  const [postFitData, setPostFitData] = useState<NoticeWrapper[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isReady, setIsReady] = useState(false);

  useEffect(() => {
    if (user === undefined) return;
    setIsReady(true);
  }, [user]);

  useEffect(() => {
    if (!isReady) return;

    const fetchFitData = async () => {
      setIsLoading(true);
      try {
        let fitParams: NoticeRequestParams;
        if (user?.type === "employee" && user?.address) {
          fitParams = { limit: 3, sort: "shop", address: user.address };
        } else {
          fitParams = { limit: 3, sort: "shop" };
        }
        const fitData: NoticeResponse = await getNotices(fitParams);
        setPostFitData(fitData.items || []);
      } catch (error) {
        console.error("맞춤 공고 API 요청 중 오류 발생:", error);
      } finally {
        setIsLoading(false);
      }
    };
    fetchFitData();
  }, [isReady, user]);

  return (
    <>
      <Head>
        <title>더 줄게 - 일자리 매칭 플랫폼</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <meta property="og:image" content="/thumbnail.jpg" />
        <meta property="og:title" content="더 줄게 - 일자리 매칭 플랫폼" />
      </Head>
      <>
        <section className={styles.main_fit}>
          <Title text="맞춤 공고" />
          {isLoading ? (
            <ul className={`post_list ${styles.fit_list}`}>
              {Array(3)
                .fill({})
                .map((_, index) => (
                  <li key={index} className="loading_wrap">
                    <PostCard isLoading={true} />
                  </li>
                ))}
            </ul>
          ) : postFitData.length > 0 ? (
            <ul className={`post_list ${styles.fit_list}`}>
              {postFitData.map(({ item }) => (
                <li key={item.id}>
                  <PostCard data={item} />
                </li>
              ))}
            </ul>
          ) : (
            <EmptyState
              message="선호하는 동네에 공고가 없습니다."
              buttonText="동네 변경하기"
              href="/user/edit"
              lineStyle="black"
            />
          )}
        </section>
        <DataList />
      </>
    </>
  );
}
